/*
  The CSS in this style tag is based off of Bear Blog's default CSS.
  https://github.com/HermanMartinus/bearblog/blob/297026a877bc2ab2b3bdfbd6b9f7961c350917dd/templates/styles/blog/default.css
  License MIT: https://github.com/HermanMartinus/bearblog/blob/master/LICENSE.md
 */

/*
  フォントサイズの調整システム
  
  このサイトでは、CSS変数 --content-scale を使用してフォントサイズを管理しています。
  
  仕組み：
  1. :root で --content-scale: 1 をデフォルト値として設定
  2. .prose クラス（ブログ記事）では --content-scale: 0.9 を設定し、全体的に90%サイズに
  3. モバイル表示では --content-scale: 0.85 まで縮小
  
  利点：
  - スケール値を1箇所で管理可能
  - 比率を保ったままサイズ調整が可能
  - ブログ記事のみに影響し、他のページには影響しない
  
  使用方法：
  font-size: calc(基準サイズ * var(--content-scale))
*/

:root {
--accent: #2337ff;
--accent-dark: #000d8a;
--black: 15, 18, 25;
--gray: 96, 115, 159;
--gray-light: 229, 233, 240;
--gray-dark: 34, 41, 57;
--gray-gradient: rgba(var(--gray-light), 50%), #fff;
--box-shadow: 0 2px 6px rgba(var(--gray), 25%), 0 8px 24px rgba(var(--gray), 33%),
0 16px 32px rgba(var(--gray), 33%);
--content-scale: 1;  /* デフォルトのスケール値（1 = 100%） */
}

/* 
  ブログ記事のフォントサイズ管理
  - デスクトップ表示では90%サイズ
  - font-sizeにcalc()を使用することで、スケールの変更が全体に反映される
*/
.prose {
--content-scale: 0.9;  /* ブログ記事用に90%サイズに縮小 */
font-size: calc(var(--content-scale) * 1rem);
}

/* 
  ブログ記事の見出しサイズ調整
  - 見出しごとに基準となるemサイズを設定
  - var(--content-scale)との乗算で全体的なバランスを保持
*/
.prose h1 { font-size: calc(1.953em * var(--content-scale)); }
.prose h2 { font-size: calc(1.563em * var(--content-scale)); }
.prose h3 { font-size: calc(1.25em * var(--content-scale)); }
.prose h4 { font-size: calc(1em * var(--content-scale)); }
.prose h5 { font-size: calc(0.875em * var(--content-scale)); }
@font-face {
	font-family: 'Atkinson';
	src: url('/fonts/atkinson-regular.woff') format('woff');
	font-weight: 400;
	font-style: normal;
	font-display: swap;
}
@font-face {
	font-family: 'Atkinson';
	src: url('/fonts/atkinson-bold.woff') format('woff');
	font-weight: 700;
	font-style: normal;
	font-display: swap;
}
body {
	font-family: 'Atkinson', sans-serif;
	margin: 0;
	padding: 0;
	text-align: left;
	background: linear-gradient(var(--gray-gradient)) no-repeat;
	background-size: 100% 600px;
	word-wrap: break-word;
	overflow-wrap: break-word;
	color: rgb(var(--gray-dark));
	font-size: 20px;
	line-height: 1.7;
}
main {
	width: 800px;
	max-width: calc(100% - 2em);
	margin: auto;
	padding: 3em 1em;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	margin: 0 0 0.5rem 0;
	color: rgb(var(--black));
line-height: 1.2;
}
h1 {
font-size: 1.953em; /* 旧h3サイズ */
}
h2 {
font-size: 1.563em; /* 旧h4サイズ */
}
/* blogポスト用 */
.prose h2 {
  font-size: 1.5rem;
}
h3 {
font-size: 1.25em; /* 旧h5サイズ */
}
/* blogポスト用 */
.prose h3 {
  font-size: 1.25rem;
}
h4 {
font-size: 1.0em; /* 基本サイズと同じ */
}
h5 {
font-size: 0.875em; /* 基本サイズより少し小さい */
}
strong,
b {
	font-weight: 700;
}
a {
	color: var(--accent);
}
a:hover {
	color: var(--accent);
}
p {
	margin-bottom: 1em;
}
.prose p {
	margin-bottom: 2em;
}
textarea {
	width: 100%;
	font-size: 16px;
}
input {
	font-size: 16px;
}
table {
	width: 100%;
}
img {
	max-width: 100%;
height: auto;
border-radius: 8px;
}

/* blogポスト内の画像サイズ調整 */
.prose img {
  display: block;
  margin-left: auto;
  margin-right: auto;
  max-width: 80%; /* 最大幅を80%に制限 */
  height: auto; /* 縦横比を維持 */
  border-radius: 8px; /* 既存の角丸を維持 */
}

code {
padding: 2px 5px;
background-color: rgb(var(--gray-light));
	border-radius: 2px;
}
pre {
	padding: 1.5em;
	border-radius: 8px;
}
pre > code {
	all: unset;
}
blockquote {
	border-left: 4px solid var(--accent);
	padding: 0 0 0 20px;
	margin: 0px;
	font-size: 1.333em;
}
hr {
	border: none;
	border-top: 1px solid rgb(var(--gray-light));
}
/* 
  レスポンシブデザインの調整
  - モバイル表示（720px以下）では全体的に小さめのサイズに
  - ブログ記事（.prose）は特に小さめに調整（85%サイズ）
  - この調整により、モバイル表示でも読みやすさを維持
*/
@media (max-width: 720px) {
body {
font-size: 18px;
}
main {
padding: 1em;
}
.prose {
--content-scale: 0.85;  /* モバイル表示時は85%サイズに縮小 */
}
}

.sr-only {
	border: 0;
	padding: 0;
	margin: 0;
	position: absolute !important;
	height: 1px;
	width: 1px;
	overflow: hidden;
	/* IE6, IE7 - a 0 height clip, off to the bottom right of the visible 1px box */
	clip: rect(1px 1px 1px 1px);
	/* maybe deprecated but we need to support legacy browsers */
	clip: rect(1px, 1px, 1px, 1px);
	/* modern browsers, clip-path works inwards from each corner */
	clip-path: inset(50%);
	/* added line to stop words getting smushed together (as they go onto seperate lines and some screen readers do not understand line feeds as a space */
	white-space: nowrap;
}
